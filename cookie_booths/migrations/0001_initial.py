# Generated by Django 3.2.6 on 2021-12-14 14:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BoothLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booth_location", models.CharField(max_length=300)),
                ("booth_address", models.CharField(max_length=300)),
                ("booth_enabled", models.BooleanField(default=False)),
                (
                    "booth_block_level_restrictions_start",
                    models.SmallIntegerField(
                        choices=[
                            (0, "None"),
                            (1, "Daisies"),
                            (2, "Brownies"),
                            (3, "Juniors"),
                            (4, "Cadettes"),
                            (5, "Seniors"),
                            (6, "Ambassadors"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "booth_block_level_restrictions_end",
                    models.SmallIntegerField(
                        choices=[
                            (0, "None"),
                            (1, "Daisies"),
                            (2, "Brownies"),
                            (3, "Juniors"),
                            (4, "Cadettes"),
                            (5, "Seniors"),
                            (6, "Ambassadors"),
                        ],
                        default=0,
                    ),
                ),
                ("booth_requires_masks", models.BooleanField(default=False)),
                ("booth_is_outside", models.BooleanField(default=False)),
                ("booth_notes", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "booth location",
                "verbose_name_plural": "booth locations",
                "permissions": (
                    ("booth_loc_creation", "Creates a booth location"),
                    ("booth_loc_updates", "Updates a booth location"),
                    ("booth_loc_deletes", "Deletes a booth location"),
                ),
            },
        ),
        migrations.CreateModel(
            name="BoothHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booth_start_date", models.DateField(blank=True, null=True)),
                ("booth_end_date", models.DateField(blank=True, null=True)),
                ("sunday_open", models.BooleanField(default=False)),
                ("sunday_golden_ticket", models.BooleanField(default=False)),
                ("sunday_open_time", models.TimeField(blank=True, null=True)),
                ("sunday_close_time", models.TimeField(blank=True, null=True)),
                ("monday_open", models.BooleanField(default=False)),
                ("monday_golden_ticket", models.BooleanField(default=False)),
                ("monday_open_time", models.TimeField(blank=True, null=True)),
                ("monday_close_time", models.TimeField(blank=True, null=True)),
                ("tuesday_open", models.BooleanField(default=False)),
                ("tuesday_golden_ticket", models.BooleanField(default=False)),
                ("tuesday_open_time", models.TimeField(blank=True, null=True)),
                ("tuesday_close_time", models.TimeField(blank=True, null=True)),
                ("wednesday_open", models.BooleanField(default=False)),
                ("wednesday_golden_ticket", models.BooleanField(default=False)),
                ("wednesday_open_time", models.TimeField(blank=True, null=True)),
                ("wednesday_close_time", models.TimeField(blank=True, null=True)),
                ("thursday_open", models.BooleanField(default=False)),
                ("thursday_golden_ticket", models.BooleanField(default=False)),
                ("thursday_open_time", models.TimeField(blank=True, null=True)),
                ("thursday_close_time", models.TimeField(blank=True, null=True)),
                ("friday_open", models.BooleanField(default=False)),
                ("friday_golden_ticket", models.BooleanField(default=False)),
                ("friday_open_time", models.TimeField(blank=True, null=True)),
                ("friday_close_time", models.TimeField(blank=True, null=True)),
                ("saturday_open", models.BooleanField(default=False)),
                ("saturday_golden_ticket", models.BooleanField(default=False)),
                ("saturday_open_time", models.TimeField(blank=True, null=True)),
                ("saturday_close_time", models.TimeField(blank=True, null=True)),
                (
                    "booth_location",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cookie_booths.boothlocation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoothDay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booth_day_date", models.DateField(blank=True, null=True)),
                ("booth_day_hours_set", models.BooleanField(default=False)),
                ("booth_day_open_time", models.DateTimeField(blank=True, null=True)),
                ("booth_day_close_time", models.DateTimeField(blank=True, null=True)),
                ("booth_day_is_golden", models.BooleanField(default=False)),
                ("booth_day_enabled", models.BooleanField(default=False)),
                ("booth_day_freeforall_enabled", models.BooleanField(default=False)),
                (
                    "booth",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cookie_booths.boothlocation",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("enable_day", "Enable a day for a booth"),
                    ("disable_day", "Disable a day for a booth"),
                    ("add_or_update_hours", "Add or update hours for a booth day"),
                    ("make_golden_booth", "Make a booth day golden"),
                    ("enable_freeforall", "Enable free for all"),
                    ("disable_freeforall", "Disable free for all"),
                ),
            },
        ),
        migrations.CreateModel(
            name="BoothBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booth_block_start_time", models.DateTimeField(blank=True, null=True)),
                ("booth_block_end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "booth_block_current_troop_owner",
                    models.SmallIntegerField(default=0),
                ),
                ("booth_block_reserved", models.BooleanField(default=False)),
                ("booth_block_enabled", models.BooleanField(default=False)),
                ("booth_block_freeforall_enabled", models.BooleanField(default=False)),
                (
                    "booth_day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cookie_booths.boothday",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("cancel_block", "Cancel a booth"),
                    ("reserve_block", "Reserve a booth"),
                    ("cancel_block_admin", "Administrator cancel any booth"),
                    ("reserve_block_admin", "Administrator reserve any booth"),
                ),
            },
        ),
    ]
